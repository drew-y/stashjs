{"version":3,"sources":["webpack:///webpack/bootstrap c0958fd263855251d2bd","webpack:///./cash.test.ts","webpack:///./Cash.ts","webpack:///./~/eventemitter3/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA,gBAAe,sBAAsB,uBAAuB,EAAE;AAC9D,gBAAe,sBAAsB,uBAAuB,EAAE;AAC9D,gBAAe,sBAAsB,yBAAyB,EAAE;AAChE;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,eAAe;AACnqBAAoB;AACpB;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,oBAAoB;AAChE;AACA,MAAK;AACL;AACA,+CAA8C,mBAAmB;AACjE;AACA,MAAK;AACL;AACA,6CAA4C,qBAAqB;AACjE;AACA,MAAK;AACL;AACA,6CAA4C,qBAAqB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,eAAe;AACjE;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChUA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,MAAM;AACjB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,QAAQ;AACnB,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAAyC,SAAS;AAClD;AACA;;AAEA;AACA,IAAG;AACH;AACA;;AAEA,gBAAe,YAAY;AAC3B;;AAEA;AACA,4DAA2D;AAC3D,gEAA+D;AAC/D,oEAAmE;AACnE,wEAAuE;AACvE;AACA,2DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,SAAS;AACpB,YAAW,MAAM;AACjB,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,SAAS;AACpB,YAAW,MAAM;AACjB,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,SAAS;AACpB,YAAW,MAAM;AACjB,YAAW,QAAQ;AACnB,cAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,4DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,cAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"cash.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c0958fd263855251d2bd","\"use strict\";\nconst Cash_1 = require(\"./Cash\");\nwindow[\"Cash\"] = Cash_1.Cash;\nconst people = new Cash_1.Cash();\npeople.insert({ name: \"Drew\", info: { age: 21, sex: \"male\" } });\npeople.insert({ name: \"Alex\", info: { age: 19, sex: \"male\" } });\npeople.insert({ name: \"Abbe\", info: { age: 16, sex: \"female\" } });\nwindow[\"people\"] = people;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./cash.test.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\nconst eventemitter3_1 = require(\"eventemitter3\");\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n///////// Main Collection Class\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n/** Collection - Mongo like evented data Cache */\nclass Cash extends eventemitter3_1.EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.documents = {};\n        this.cachedQueries = {};\n    }\n    /** Generate a unique ID */\n    genID() {\n        const randArray = new Uint32Array(8);\n        crypto.getRandomValues(randArray);\n        let id = \"\";\n        randArray.forEach((rand) => {\n            id += rand.toString(36);\n        });\n        return id;\n    }\n    insertDoc(doc) {\n        const _id = this.genID();\n        const document = { _id };\n        Object.assign(document, doc);\n        this.documents[_id] = document;\n        this.emit(\"insert\", doc);\n        return { success: true, document };\n    }\n    updateDoc(query, update, name, one) {\n        const docsToUpdate = this.find(query, name, one);\n        for (const key in update) {\n            if (updateOperators.hasOwnProperty(key)) {\n                updateOperators[key](docsToUpdate, update[key]);\n            }\n        }\n        this.emit(\"update\", docsToUpdate);\n        return { success: true, documents: docsToUpdate };\n    }\n    parseQueryItem(queryItemField, queryItem) {\n        const queryType = typeof (queryItem);\n        const isPrimitive = queryType === \"string\" || queryType === \"number\" || queryType === \"boolean\";\n        if (isPrimitive) {\n            return (doc) => getField(queryItemField, doc).value === queryItem;\n        }\n        if (queryItem instanceof RegExp) {\n            return (doc) => queryItem.test(getField(queryItemField, doc).value);\n        }\n        const opName = Object.keys(queryItem)[0];\n        let opFunc;\n        if (comparisonOperators.hasOwnProperty(opName)) {\n            opFunc = comparisonOperators[opName];\n        }\n        else if (logicalOperators.hasOwnProperty(opName)) {\n            opFunc = logicalOperators[opName];\n        }\n        else {\n            throw new Error(`Invalid operator for ${queryItemField}`);\n        }\n        return opFunc(queryItemField, queryItem[opName]);\n    }\n    /** Reutrns an array of functions that check a doc and return true if the doc matches the function */\n    parseQuery(query) {\n        const checks = [];\n        for (const key in query) {\n            if (query.hasOwnProperty(key)) {\n                const queryItem = query[key];\n                const check = this.parseQueryItem(key, queryItem);\n                checks.push(check);\n            }\n        }\n        return checks;\n    }\n    insert(doc) {\n        return new Promise((resolve, reject) => {\n            const hResolve = () => resolve(this.insertDoc(doc));\n            const hasHooks = this.emit(\"beforeInsert\", doc, hResolve, reject);\n            if (!hasHooks)\n                hResolve();\n        });\n    }\n    update(query, update, name, one) {\n        if (update.hasOwnProperty(\"_id\")) {\n            delete update[\"_id\"];\n        }\n        return new Promise((resolve, reject) => {\n            const hResolve = () => resolve(this.updateDoc(query, update, name, one));\n            const hasHooks = this.emit(\"beforeUpdate\", update, query, hResolve, reject);\n            if (!hasHooks)\n                hResolve();\n        });\n    }\n    remove(query, name, one) {\n        this.emit(\"beforeRemove\", query);\n        const docsToRemove = this.find(query, name, one);\n        const removedDocs = [];\n        for (const doc of docsToRemove) {\n            removedDocs.push(Object.assign({}, doc));\n            delete this.documents[doc._id];\n        }\n        this.emit(\"remove\", removedDocs);\n        return removedDocs;\n    }\n    findOne(query, name) {\n        return this.find(query, name, true)[0];\n    }\n    find(query, name, one) {\n        const matchingDocs = [];\n        let docs = this.documents;\n        // If query has an _id find the doc it correponds too (if it exists)\n        if (query.hasOwnProperty(\"_id\")) {\n            if (!docs.hasOwnProperty(query._id))\n                return [];\n            docs = {};\n            docs[query._id] = Object.assign({}, this.documents[query._id]);\n        }\n        const queryIsCached = !!this.cachedQueries[name];\n        const checks = queryIsCached ? this.cachedQueries[name] : this.parseQuery(query);\n        if (name && !queryIsCached) {\n            this.cachedQueries[name] = checks;\n        }\n        for (const docID in docs) {\n            if (docs.hasOwnProperty(docID)) {\n                const document = docs[docID];\n                let isValid = true;\n                for (const check of checks) {\n                    isValid = check(document);\n                }\n                if (isValid)\n                    matchingDocs.push(document);\n                if (isValid && one)\n                    break;\n            }\n        }\n        return matchingDocs;\n    }\n}\nexports.Cash = Cash;\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n///////// Operators\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n/** Parse a mongo field string (\"field.subdoc.val etc\") and return the containing subdocument, and the value of the subdoc */\nfunction getField(fieldStr, doc) {\n    const parsedFields = fieldStr.split(\".\");\n    const lastField = parsedFields.pop();\n    let docLevel = doc;\n    for (const fieldLevel of parsedFields) {\n        try {\n            docLevel = docLevel[fieldLevel];\n        }\n        catch (error) {\n            return { success: false };\n        }\n    }\n    return { success: true, reference: docLevel, field: lastField, value: docLevel[lastField] };\n}\nfunction genericUpdate(docsToUpdate, fields, operation) {\n    for (const doc of docsToUpdate) {\n        for (const field in fields) {\n            if (!fields.hasOwnProperty(field))\n                continue;\n            const docField = getField(field, doc);\n            if (docField.success) {\n                operation(docField, docField.field, fields[field]);\n            }\n        }\n    }\n}\nconst updateOperators = {\n    $set: function (docsToUpdate, fields) {\n        const set = (obj, field, value) => { obj[field] = value; };\n        genericUpdate(docsToUpdate, fields, set);\n    },\n    $unset: function (docsToUpdate, fields) {\n        const unset = (obj, field, value) => { delete obj[field]; };\n        genericUpdate(docsToUpdate, fields, unset);\n    },\n    $inc: function (docsToUpdate, fields) {\n        const inc = (obj, field, value) => { obj[field] += value; };\n        genericUpdate(docsToUpdate, fields, inc);\n    },\n    $mul: function (docsToUpdate, fields) {\n        const mul = (obj, field, value) => { obj[field] *= value; };\n        genericUpdate(docsToUpdate, fields, mul);\n    }\n};\nconst comparisonOperators = {\n    $gte: function (fieldStr, queryItemValue) {\n        return (doc) => {\n            const fieldInfo = getField(fieldStr, doc);\n            if (fieldInfo.success)\n                return fieldInfo.value >= queryItemValue;\n            return false;\n        };\n    },\n    $lte: function (queryItemField, queryItemValue) {\n        return (doc) => {\n            const fieldInfo = getField(queryItemField, doc);\n            if (fieldInfo.success)\n                return fieldInfo.value <= queryItemValue;\n            return false;\n        };\n    },\n    $gt: function (queryItemField, queryItemValue) {\n        return (doc) => {\n            const fieldInfo = getField(queryItemField, doc);\n            if (fieldInfo.success)\n                return fieldInfo.value > queryItemValue;\n            return false;\n        };\n    },\n    $lt: function (queryItemField, queryItemValue) {\n        return (doc) => {\n            const fieldInfo = getField(queryItemField, doc);\n            if (fieldInfo.success)\n                return fieldInfo.value < queryItemValue;\n            return false;\n        };\n    },\n    $eq: function (queryItemField, queryItemValue) {\n        return (doc) => {\n            const fieldInfo = getField(queryItemField, doc);\n            if (fieldInfo.success)\n                return fieldInfo.value === queryItemValue;\n            return false;\n        };\n    },\n    $ne: function (queryItemField, queryItemValue) {\n        return (doc) => {\n            const fieldInfo = getField(queryItemField, doc);\n            if (fieldInfo.success)\n                return fieldInfo.value !== queryItemValue;\n            return false;\n        };\n    },\n    $in: function (queryItemField, queryItemValue) {\n        return (doc) => {\n            const fieldInfo = getField(queryItemField, doc);\n            if (fieldInfo.success)\n                return queryItemValue.indexOf(fieldInfo.value) !== -1;\n            return false;\n        };\n    },\n    $nin: function (queryItemField, queryItemValue) {\n        return (doc) => {\n            const fieldInfo = getField(queryItemField, doc);\n            if (fieldInfo.success)\n                return queryItemValue.indexOf(fieldInfo.value) === -1;\n            return false;\n        };\n    }\n};\nfunction getChecksFromArray(queryItemField, queryItemValue) {\n    if (queryItemValue !== Array) {\n        throw new Error(`QueryItem ${queryItemField} is missing an Array`);\n    }\n    const checks = [];\n    queryItemValue.forEach((item) => {\n        const funcName = Object.keys(item)[0];\n        let func;\n        if (comparisonOperators.hasOwnProperty(funcName)) {\n            func = comparisonOperators[funcName];\n        }\n        else if (logicalOperators.hasOwnProperty(funcName)) {\n            func = logicalOperators[funcName];\n        }\n        else {\n            throw new Error(`Invaid operator in ${queryItemField}`);\n        }\n        checks.push(func(queryItemField, item[funcName]));\n    });\n    return checks;\n}\nconst logicalOperators = {\n    $and: function (queryItemField, queryItemValue) {\n        const checks = getChecksFromArray(queryItemField, queryItemValue);\n        return (doc) => {\n            for (const check of checks) {\n                const success = check(doc);\n                if (!success)\n                    return false;\n            }\n            return true;\n        };\n    },\n    $or: function (queryItemField, queryItemValue) {\n        const checks = getChecksFromArray(queryItemField, queryItemValue);\n        return (doc) => {\n            for (const check of checks) {\n                const success = check(doc);\n                if (success)\n                    return true;\n            }\n            return false;\n        };\n    },\n    $nor: function (queryItemField, queryItemValue) {\n        const checks = getChecksFromArray(queryItemField, queryItemValue);\n        return (doc) => {\n            for (const check of checks) {\n                const success = check(doc);\n                if (success)\n                    return false;\n            }\n            return true;\n        };\n    },\n    $not: function (queryItemField, queryItemValue) {\n        const opName = Object.keys(queryItemValue)[0];\n        const checkOP = comparisonOperators[opName];\n        if (!checkOP)\n            throw new Error(`Bad operator for $not at`);\n        const check = checkOP(queryItemField, queryItemValue);\n        return (doc) => !check(doc);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Cash.ts\n// module id = 1\n// module chunks = 0","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eventemitter3/index.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}